
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'
	

endglobal
snippet codepac "Add package of colored code" wA
\usepackage{listings}
\usepackage{xcolor}
\lstset { %
	language=C++,
	backgroundcolor=\color{black!5}, % set backgroundcolor
	basicstyle=\footnotesize,% basic font setting
}
endsnippet

context "math()"
snippet BB "Big Brace" w
\left\\{\begin{aligned}
$1
\end{aligned}\right.
$0
endsnippet

snippet "ttbf" "Mineral's List of words" r
\textbf{${1}} $0
endsnippet

snippet "thm" "thm context for latex template" r
\begin{thm}[$1]
$2
\end{thm}$0
endsnippet


snippet code "code env" w
\begin{lstlisting}
	$1
\end{lstlisting}
$0
endsnippet


snippet subsec "Mineral's subsection" bA
\subsection{$1}
endsnippet

snippet subsubsec "Mineral's subsection" bA
\subsubsection{$1}
endsnippet

snippet subsubsubsec "Mineral's subsection" bA
\subsubsubsection{$1}
endsnippet

snippet sec "Mineral's section" bA
\section{$1}
endsnippet

snippet template "English template" w
\documentclass{article}
\usepackage{geometry}
\usepackage{graphicx}
\graphicspath{ {./Figures/} }
\usepackage{ulem}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\geometry{a4paper,scale=0.8}
\author{MineralSteins}
\title{$1}
\date {\today}
\begin{document}
	\maketitle
	$0
\end{document}
endsnippet

snippet repmubr "template" w
\documentclass{ctexrep}
\usepackage{geometry}
\usepackage{graphicx}
\usepackage{ulem}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\geometry{a4paper,scale=0.8}
\usepackage{fullpage}
\author{MineralSteins}
\title{$1}
\date {\today}
\begin{document}
	\maketitle
	$0
\end{document}

endsnippet

snippet mubr "Basic template" b
\documentclass[utf8]{ctexart}
\usepackage[a4paper,total={6in,10in}]{geometry}
\usepackage{graphicx}
\usepackage{ulem}
\usepackage{amsmath}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\author{MineralSteins}
\title{$1}
\date {\today}
\begin{document}
	\maketitle
	$0
\end{document}
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: &)/g} \\\\
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" bA
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}} \label{fig:${5:${3/\W+/-/g}}} 
\end{figure}
	
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet
	
snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pack "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet pac "Package" b
\usepackage{${1:package}}$0
endsnippet

snippet => "implies" i
\implies
endsnippet

snippet =< "implied by" i
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
$ ${1} $`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
.\] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet


context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2} $0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1} $0
endsnippet
context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1} $0
endsnippet

context "math()"
snippet +- "pm" i
\pm 
endsnippet 

context "math()"
snippet -+ "mp" i
\mp 
endsnippet 

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wr
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet ang "\angle" w
\angle
endsnippet

snippet jisl "sympyblock " w
jisl $1 jisl$0
endsnippet

priority 10000
snippet 'jisl(.*)jisl' "计算" wAr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

priority 1000 
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

context "math()"
snippet == "equals" iA
&= $1 \\\\
endsnippet

context "math()"
snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor $0
endsnippet

snippet pmat "pmat" i
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" i
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" iA
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet conj "conjugate" i
\overline{$1}$0
endsnippet

snippet sum "sum" wA
\sum_{${1}}^{${2:\infty}} ${3:a_n z^n} $0
endsnippet

snippet tple "taylor" wA
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
snippet lim "limit" w
\lim_{ ${1:n} \to ${2:\infty}} $0
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" wA
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" i
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet ^^ "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet ^( "to the ... power" i
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet oo "\infty" i
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" i
\exists 
endsnippet

context "math()"
snippet !EE "geq" i
\nexists 
endsnippet

context "math()"
snippet AA "rall" i
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet ann "yn" iA
a_{n}
endsnippet
context "math()"
snippet bnn "yn" iA
b_{n}
endsnippet
context "math()"
snippet cnn "yn" iA
c_{n}
endsnippet
context "math()"
snippet snn "yn" iA
s_{n}
endsnippet

context "math()"
snippet xii "xi" i
x_{i}
endsnippet

context "math()"
snippet yii "yi" i
y_{i}
endsnippet
context "math()"
snippet aii "xi" i
a_{i}
endsnippet
context "math()"
snippet bii "xi" i
b_{i}
endsnippet
context "math()"
snippet cii "xi" i
c_{i}
endsnippet
context "math()"
snippet sii "xi" i
s_{i}
endsnippet

context "math()"
snippet xjj "xj" i
x_{j}
endsnippet

context "math()"
snippet yjj "yj" i
y_{j}
endsnippet
context "math()"
snippet ajj "xj" i
a_{j}
endsnippet
context "math()"
snippet bjj "xj" i
b_{j}
endsnippet
context "math()"
snippet cjj "cj" i
c_{j}
endsnippet
context "math()"
snippet sjj "sj" i
s_{j}
endsnippet

context "math()"
snippet xp1 "x" i
x_{n+1}
endsnippet
context "math()"
snippet ap1 "x" i
a_{n+1}
endsnippet
context "math()"
snippet bp1 "x" i
b_{n+1}
endsnippet
context "math()"
snippet cp1 "x" i
c_{n+1}
endsnippet
context "math()"
snippet sp1 "x" i
s_{n+1}
endsnippet

context "math()"
snippet xmm "x" iw
x_{m}
endsnippet
context "math()"
snippet amm "x" iw
a_{m}
endsnippet
context "math()"
snippet bmm "x" iw
b_{m}
endsnippet
context "math()"
snippet cmm "x" iw
c_{m}
endsnippet
context "math()"
snippet smm "x" iw
s_{m}
endsnippet

snippet R0+ "R0+" i
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" i
\mathcal{$1}$0
endsnippet

snippet lll "l" i
\ell 
endsnippet

context "math()"
snippet nbl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

context "math()"
priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

snippet [ "bracket" i
[$1]$0
endsnippet

snippet ( "parentheses" i
($1)$0
endsnippet

context "math()"
snippet norm "norm" i
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet log "log" w
\log_{$1} $0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|sec|cot|csc|tan|cos|arccot|cot|csc|ln|exp|star|perp|vec|land|lor|vee|wedge|ast|star|circ)' "ln" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{ ${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|mu|nu)' "ln" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet


priority 100
context "math()"
snippet -> "to" i
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" i
\leftrightarrow 
endsnippet

context "math()"
snippet !> "mapsto" i
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" i
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" i
\setminus 
endsnippet

snippet >> ">>" i
\gg 
endsnippet

snippet << "<<" i
\ll 
endsnippet


snippet ~~ "~" i
\sim 
endsnippet

context "math()"
snippet set "set" w
\\{$1\\} $0
endsnippet

snippet || "mid" i
\mid 
endsnippet

context "math()"
snippet or "or" i
\vee 
endsnippet

context "math()"
snippet neg "neg" i
\neg 
endsnippet

context "math()"
snippet Gam "gamm" i
\Gamma
endsnippet

context "math()"
snippet gam "gamm" iA
\gamma
endsnippet

context "math()"
snippet Tht "tht" i
\Tht
endsnippet

context "math()"
snippet tht "tht" i
\tht
endsnippet

context "math()"
snippet Bet "beta" i
\Beta
endsnippet

context "math()"
snippet bet "beta" iA
\beta
endsnippet

context "math()"
snippet Sig "Sigma" iA
\Sigma 
endsnippet

context "math()"
snippet sig "sigma" iA
\sigma 
endsnippet

context "math()"
snippet Alp "alpha" iA
\Alpha
endsnippet

context "math()"
snippet alp "alpha" iA
\alpha
endsnippet

context "math()"
snippet vep "varepilon" iA
\varepsilon 
endsnippet

context "math()"
snippet eps "varepilon" iA
\epsilon 
endsnippet

context "math()"
snippet dlt "delta" iA
\delta 
endsnippet

context "math()"
snippet Dlt "Delta" iA
\Delta 
endsnippet

context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

snippet notin "not in " i
\not\in 
endsnippet

context "math()"
snippet ppt "propto" i
\propto
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

context "math()"
snippet NN "n" i
\mathbb{N}
endsnippet

snippet Nn "cap" i
\cap 
endsnippet

snippet UU "cup" i
\cup 
endsnippet

snippet uuu "bigcup" i
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet nnn "bigcap" i
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

snippet OO "emptyset" iA
\varnothing 
endsnippet

snippet RR "real" i
\mathbb{R} 
endsnippet

snippet QQ "Q" iA
\mathbb{Q} 
endsnippet

snippet ZZ "Z" iA
\mathbb{z} 
endsnippet

snippet <! "normal" i
\triangleleft 
endsnippet

snippet <> "hokje" i
\diamond 
endsnippet

context "math()"
snippet '(?<!i)sts' "text subscript" ir
_\text{$1} $0
endsnippet

snippet ttit "textitalic" i 
\textit{$1} $0
endsnippet

snippet tttt "text type writter" i 
\texttt{$1} $0
endsnippet

snippet ttbf "textboldface" i 
\textbf{$1} $0
endsnippet

context "math()"
snippet tt "text" wi
\text{$1}$0
endsnippet

context "math()"
snippet cases "cases" w
\begin{cases}
	$1
\end{cases}
endsnippet

snippet SI "SI" i
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" i
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $5
.\end{align*}$0
endsnippet

snippet cvec "column vector" i
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" ri
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" ri
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" ri
\hat{$1}$0
endsnippet

priority 100 q
context "math()"
snippet "([a-zA-Z])hat" "hat" ri
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet "what" "hat" ri
\widehat{$1}$0
endsnippet

snippet letw "let omega" i
Let $\Omega \subset \C$ be open.
endsnippet


snippet HH "H" i
\mathbb{H}
endsnippet

snippet DD "D" i
\mathbb{D}
endsnippet

context "math()"
snippet mrm "mathrm" iA
\mathrm{$1} $0 
endsnippet 

context "math()"
snippet dx "mathrm" iA
\mathrm{d}x$0 
endsnippet 
context "math()"
snippet dy "mathrm" iA
\mathrm{d}y$0 
endsnippet 
context "math()"
snippet dz "mathrm" iA
\mathrm{d}z$0 
endsnippet 
snippet dd "mathrm" iA
\mathrm{d}$0 
endsnippet 


# vim:ft=snippets
